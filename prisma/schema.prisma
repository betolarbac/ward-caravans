// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @unique @default(cuid())
  name     String?
  email    String  @unique
  password String
  nrm      String?
  role     String  @default("user")
  wardId   String?
  ward     Ward?   @relation(fields: [wardId], references: [id])
  Stake    Stake?  @relation(fields: [stakeId], references: [id])
  stakeId  String?
}

model Stake {
  id        String   @id @unique @default(cuid())
  name      String
  createdAt DateTime @default(now())
  ward      Ward[]
  user      User[]
}

model Ward {
  id        String     @id @unique @default(cuid())
  name      String?
  createdAt DateTime   @default(now())
  stakeId   String
  stake     Stake      @relation(fields: [stakeId], references: [id])
  users     User[]
  Caravans  Caravans[]
}

model Caravans {
  id      String    @id @unique @default(cuid())
  name    String?
  date    DateTime?
  vacancy Int?
  active  Boolean   @default(true)
  wardId  String
  ward    Ward?     @relation(fields: [wardId], references: [id])
  Member  Member[]
}

model Member {
  id         String    @id @unique @default(cuid())
  name       String?
  cpf        String    @unique
  ward       String
  pay        Boolean   @default(false)
  caravansId String
  caravans   Caravans? @relation(fields: [caravansId], references: [id])
}
